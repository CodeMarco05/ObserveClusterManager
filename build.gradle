plugins {
    id 'java'
    id 'io.quarkus' version '3.24.1'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-smallrye-openapi'
    implementation 'io.quarkus:quarkus-config-yaml'
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-rest-jsonb'
    implementation 'io.quarkus:quarkus-rest-jackson'
    implementation 'io.quarkus:quarkus-hibernate-orm-panache'
    implementation 'io.quarkus:quarkus-jdbc-postgresql'
    implementation 'io.github.cdimascio:dotenv-java:2.2.0'

    // key generation
    implementation 'io.quarkus:quarkus-smallrye-jwt'
    implementation 'io.smallrye:smallrye-jwt-build'

    // password hasing
    implementation 'org.mindrot:jbcrypt:0.4'
    implementation 'io.quarkus:quarkus-rest-client-jackson'
    implementation 'io.quarkus:quarkus-rest-client'

    // Tests
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'org.mockito:mockito-core:5.12.0'
    testImplementation 'org.mockito:mockito-all:2.0.2-beta'

    // MockServer for testing
    testImplementation 'org.mock-server:mockserver-junit-jupiter:5.15.0'
    testImplementation 'org.mock-server:mockserver-client-java:5.15.0'
    testImplementation 'io.quarkus:quarkus-junit5-mockito:3.24.4'

    // for jobs and scheduling
    implementation 'io.quarkus:quarkus-scheduler'
}

group = 'com.observe.os1'
version = '1.3-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

test {
    testLogging {
        events = ["passed", "skipped", "failed", "standardOut", "standardError"]
        exceptionFormat = "full"
        showCauses = true
        showExceptions = true
        showStackTraces = true
    }
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}
